/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_LSM6DS_PB_H_INCLUDED
#define PB_LSM6DS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _temp_data {
    uint32_t tick;
    float temp;
    uint32_t err;
} temp_data;

typedef struct _msg_oneof {
    pb_size_t which_msg;
    union {
        temp_data msg_temp_data;
    } msg;
} msg_oneof;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define temp_data_init_default                   {0, 0, 0}
#define msg_oneof_init_default                   {0, {temp_data_init_default}}
#define temp_data_init_zero                      {0, 0, 0}
#define msg_oneof_init_zero                      {0, {temp_data_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define temp_data_tick_tag                       1
#define temp_data_temp_tag                       2
#define temp_data_err_tag                        3
#define msg_oneof_msg_temp_data_tag              1

/* Struct field encoding specification for nanopb */
#define temp_data_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   tick,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    temp,              2) \
X(a, STATIC,   SINGULAR, UINT32,   err,               3)
#define temp_data_CALLBACK NULL
#define temp_data_DEFAULT NULL

#define msg_oneof_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,msg_temp_data,msg.msg_temp_data),   1)
#define msg_oneof_CALLBACK NULL
#define msg_oneof_DEFAULT NULL
#define msg_oneof_msg_msg_temp_data_MSGTYPE temp_data

extern const pb_msgdesc_t temp_data_msg;
extern const pb_msgdesc_t msg_oneof_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define temp_data_fields &temp_data_msg
#define msg_oneof_fields &msg_oneof_msg

/* Maximum encoded size of messages (where known) */
#define msg_oneof_size                           19
#define temp_data_size                           17

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
